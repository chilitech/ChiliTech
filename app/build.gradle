// 1、取出isComponent字段
def isComponent = rootProject.ext.isComponent

// 2、根据isComponent字段，来确定当前是集成化 还是组件化
if (isComponent) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

def appId = rootProject.ext.appId

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        // 3、如果当前是组件化，那么就需要 applicationId
        if (isComponent) {
            applicationId appId.app
        }
        applicationId "com.chilitech.app.architecture"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //images-glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    //高斯模糊
    implementation 'jp.wasabeef:glide-transformations:2.0.1'

    //Dagger2
    api "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    testImplementation "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    api project(':domain')
}
